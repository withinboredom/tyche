<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>References on Tyche | Bring your project fortune</title>
    <link>https://withinboredom.github.io/tyche/reference/</link>
    <description>Recent content in References on Tyche | Bring your project fortune</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 09 Sep 2016 22:22:09 -0400</lastBuildDate>
    <atom:link href="https://withinboredom.github.io/tyche/reference/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Reference</title>
      <link>https://withinboredom.github.io/tyche/reference/</link>
      <pubDate>Fri, 09 Sep 2016 22:22:09 -0400</pubDate>
      
      <guid>https://withinboredom.github.io/tyche/reference/</guid>
      <description>

&lt;h3 id=&#34;chapter-2&#34;&gt;Chapter 2&lt;/h3&gt;

&lt;h1 id=&#34;the-reference-chapter&#34;&gt;The Reference Chapter&lt;/h1&gt;

&lt;p&gt;Please choose a menu item on the sidebar to find what it is you are looking for.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>tyche.json Reference</title>
      <link>https://withinboredom.github.io/tyche/reference/tyche-json/</link>
      <pubDate>Fri, 09 Sep 2016 22:41:23 -0400</pubDate>
      
      <guid>https://withinboredom.github.io/tyche/reference/tyche-json/</guid>
      <description>

&lt;p&gt;An example &lt;code&gt;tyche.json&lt;/code&gt; file, taken from the tyche repository:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
  &amp;quot;settings&amp;quot;: {
    &amp;quot;defaultTool&amp;quot;: &amp;quot;native&amp;quot;
  },
  &amp;quot;tasks&amp;quot;: [
    {
      &amp;quot;name&amp;quot;: &amp;quot;clean&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;Removes all build dependencies&amp;quot;,
      &amp;quot;tasks&amp;quot;: [
        {
          &amp;quot;name&amp;quot;: &amp;quot;node_modules&amp;quot;,
          &amp;quot;description&amp;quot;: &amp;quot;Clean node_modules&amp;quot;,
          &amp;quot;exec&amp;quot;: {
            &amp;quot;native-nix&amp;quot;: {
              &amp;quot;command&amp;quot;: [&amp;quot;rm&amp;quot;,&amp;quot;-rf&amp;quot;,&amp;quot;node_modules&amp;quot;]
            },
            &amp;quot;docker-compose&amp;quot;: {
              &amp;quot;action&amp;quot;: &amp;quot;down&amp;quot;,
              &amp;quot;volumes&amp;quot;: true
            }
          }
        }
      ]
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;build&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;Build this nifty little cli tool&amp;quot;,
      &amp;quot;tasks&amp;quot;: [
        &amp;quot;doc-build&amp;quot;,
        {
          &amp;quot;name&amp;quot;: &amp;quot;dependencies&amp;quot;,
          &amp;quot;description&amp;quot;: &amp;quot;Install build dependencies&amp;quot;,
          &amp;quot;exec&amp;quot;: {
            &amp;quot;native&amp;quot;: {
              &amp;quot;command&amp;quot;: [&amp;quot;npm&amp;quot;,&amp;quot;install&amp;quot;]
            },
            &amp;quot;docker-compose&amp;quot;: {
              &amp;quot;service&amp;quot;: &amp;quot;tyche-prep&amp;quot;
            }
          },
          &amp;quot;skips&amp;quot;: {
            &amp;quot;files_not_changed&amp;quot;: [
              &amp;quot;package.json&amp;quot;
            ],
            &amp;quot;path_exists&amp;quot;: [
              &amp;quot;node_modules&amp;quot;
            ],
            &amp;quot;skip_dependencies_if_skip&amp;quot;: true
          }
        },
        {
          &amp;quot;name&amp;quot;: &amp;quot;build-cli&amp;quot;,
          &amp;quot;description&amp;quot;: &amp;quot;Actually build the tool...&amp;quot;,
          &amp;quot;tasks&amp;quot;: [
            &amp;quot;dependencies&amp;quot;
          ],
          &amp;quot;exec&amp;quot;: {
            &amp;quot;native&amp;quot;: {
              &amp;quot;command&amp;quot;: [&amp;quot;npm&amp;quot;,&amp;quot;run&amp;quot;,&amp;quot;build-cli&amp;quot;]
            },
            &amp;quot;docker-compose&amp;quot;: {
              &amp;quot;service&amp;quot;: &amp;quot;tyche-builder&amp;quot;
            }
          }
        }
      ]
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;watch&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;Build as you write code&amp;quot;,
      &amp;quot;exec&amp;quot;: {
        &amp;quot;native&amp;quot;: {
          &amp;quot;command&amp;quot;: [&amp;quot;npm&amp;quot;,&amp;quot;run&amp;quot;,&amp;quot;watch&amp;quot;]
        }
      },
      &amp;quot;tasks&amp;quot;: [
        &amp;quot;dependencies&amp;quot;
      ]
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;test&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;Run unit tests&amp;quot;,
      &amp;quot;exec&amp;quot;: {
        &amp;quot;native&amp;quot;: {
          &amp;quot;command&amp;quot;: [&amp;quot;npm&amp;quot;,&amp;quot;run&amp;quot;,&amp;quot;test&amp;quot;,&amp;quot;--&amp;quot;,&amp;quot;--coverage&amp;quot;]
        },
        &amp;quot;docker-compose&amp;quot;: {
          &amp;quot;service&amp;quot;: &amp;quot;tyche-tests&amp;quot;
        },
        &amp;quot;tasks&amp;quot;: [
          &amp;quot;build&amp;quot;
        ]
      }
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;bump&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;bumps the current version&amp;quot;,
      &amp;quot;exec&amp;quot;: {
        &amp;quot;native&amp;quot;: {
          &amp;quot;command&amp;quot;: [&amp;quot;npm&amp;quot;,&amp;quot;version&amp;quot;,&amp;quot;$BUILD_NUMBER&amp;quot;]
        }
      }
    },
    {
      &amp;quot;name&amp;quot;: &amp;quot;docs&amp;quot;,
      &amp;quot;description&amp;quot;: &amp;quot;operate on the documentation&amp;quot;,
      &amp;quot;tasks&amp;quot;: [
        {
          &amp;quot;name&amp;quot;: &amp;quot;dev&amp;quot;,
          &amp;quot;description&amp;quot;: &amp;quot;Watch and build the docs in realtime&amp;quot;,
          &amp;quot;exec&amp;quot;: {
            &amp;quot;native&amp;quot;: {
              &amp;quot;command&amp;quot;: [&amp;quot;hugo&amp;quot;,&amp;quot;serve&amp;quot;],
              &amp;quot;working&amp;quot;: &amp;quot;./docs&amp;quot;
            }
          }
        },
        {
          &amp;quot;name&amp;quot;: &amp;quot;doc-build&amp;quot;,
          &amp;quot;description&amp;quot;: &amp;quot;Turn the docs into static pages for github&amp;quot;,
          &amp;quot;exec&amp;quot;: {
            &amp;quot;native&amp;quot;: {
              &amp;quot;command&amp;quot;: [&amp;quot;hugo&amp;quot;,&amp;quot;-d&amp;quot;,&amp;quot;.&amp;quot;],
              &amp;quot;working&amp;quot;: &amp;quot;./docs&amp;quot;
            }
          }
        },
        {
          &amp;quot;name&amp;quot;: &amp;quot;new-chapter&amp;quot;,
          &amp;quot;description&amp;quot;: &amp;quot;Create a new page for the docs&amp;quot;,
          &amp;quot;exec&amp;quot;: {
            &amp;quot;native&amp;quot;: {
              &amp;quot;command&amp;quot;: [&amp;quot;hugo&amp;quot;,&amp;quot;new&amp;quot;,&amp;quot;--kind&amp;quot;,&amp;quot;chapter&amp;quot;],
              &amp;quot;acceptsArgs&amp;quot;: true,
              &amp;quot;working&amp;quot;: &amp;quot;./docs&amp;quot;
            }
          }
        },
        {
          &amp;quot;name&amp;quot;: &amp;quot;new-page&amp;quot;,
          &amp;quot;description&amp;quot;: &amp;quot;Create a new page for the docs&amp;quot;,
          &amp;quot;exec&amp;quot;: {
            &amp;quot;native&amp;quot;: {
              &amp;quot;command&amp;quot;: [&amp;quot;hugo&amp;quot;,&amp;quot;new&amp;quot;],
              &amp;quot;acceptsArgs&amp;quot;: true,
              &amp;quot;working&amp;quot;: &amp;quot;./docs&amp;quot;
            }
          }
        }
      ]
    }
  ],
  &amp;quot;study&amp;quot;: [
    {
      &amp;quot;on&amp;quot;: &amp;quot;commit&amp;quot;,
      &amp;quot;watch&amp;quot;: [
        &amp;quot;tyche.json&amp;quot;,
        &amp;quot;package.json&amp;quot;,
        &amp;quot;src/**/*&amp;quot;
      ],
      &amp;quot;message&amp;quot;: {
        &amp;quot;warn&amp;quot;: &amp;quot;It looks like you forgot to build this commit, maybe you should do that?&amp;quot;
      },
      &amp;quot;reset&amp;quot;: [
        &amp;quot;build&amp;quot;,
        &amp;quot;watch&amp;quot;
      ]
    },
    {
      &amp;quot;on&amp;quot;: &amp;quot;push&amp;quot;,
      &amp;quot;watch&amp;quot;: [
        &amp;quot;tyche.json&amp;quot;,
        &amp;quot;package.json&amp;quot;,
        &amp;quot;src/**/*.js&amp;quot;
      ],
      &amp;quot;message&amp;quot;: {
        &amp;quot;error&amp;quot;: &amp;quot;It looks like you forgot to build this commit, please do that&amp;quot;
      },
      &amp;quot;reset&amp;quot;: [
        &amp;quot;build&amp;quot;,
        &amp;quot;watch&amp;quot;
      ],
      &amp;quot;branch&amp;quot;: [&amp;quot;master&amp;quot;]
    },
    {
      &amp;quot;on&amp;quot;: &amp;quot;commit&amp;quot;,
      &amp;quot;plugin&amp;quot;: &amp;quot;no-conflicts&amp;quot;,
      &amp;quot;message&amp;quot;: {
        &amp;quot;error&amp;quot;: &amp;quot;You cannot commit conflicts. Please resolve them and try again.&amp;quot;
      }
    }
  ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;settings&#34;&gt;Settings&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;settings&amp;quot;: {
        &amp;quot;defaultTool&amp;quot;: &amp;quot;docker-compose&amp;quot; # Either native or docker-compose
    }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>docker compose tool</title>
      <link>https://withinboredom.github.io/tyche/reference/docker-compose-tool/</link>
      <pubDate>Fri, 09 Sep 2016 22:46:54 -0400</pubDate>
      
      <guid>https://withinboredom.github.io/tyche/reference/docker-compose-tool/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://docs.docker.com/compose/&#34;&gt;Docker Compose&lt;/a&gt; is a cli tool from
the great people at &lt;a href=&#34;https://www.docker.com/&#34;&gt;Docker&lt;/a&gt;. It&amp;rsquo;s a supported
tool in tyche. I&amp;rsquo;ve personally found it to be very powerful when used to
create prod-like and reliable development environments.&lt;/p&gt;

&lt;p&gt;To use this tool, simply add it to the task definition:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;exec&amp;quot;: {
        &amp;quot;docker-compose&amp;quot;: {}
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here are the available keys/values the tool accepts:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;bold&lt;/strong&gt; is the default, if the key is required.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;action: (string)

&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;up&lt;/strong&gt;: same as &lt;code&gt;docker-compose up&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;down&lt;/em&gt;: same as &lt;code&gt;docker-compose down&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;build&lt;/em&gt;: same as &lt;code&gt;docker-compose build&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;pull&lt;/em&gt;: same as &lt;code&gt;docker-compose pull&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;run&lt;/em&gt;: same as &lt;code&gt;docker-compose run&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;service&lt;/em&gt;: (string) The name of the service(s) to perform an action on&lt;/li&gt;
&lt;li&gt;&lt;em&gt;file&lt;/em&gt;: (string) The name of the &lt;code&gt;docker-compose.yml&lt;/code&gt; file, which is the default&lt;/li&gt;
&lt;li&gt;&lt;em&gt;command&lt;/em&gt;: (string) The command string to pass to &lt;code&gt;docker-compose run&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;volumes&lt;/em&gt;: (boolean) Whether to delete volumes when the action is &lt;code&gt;down&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>native tool</title>
      <link>https://withinboredom.github.io/tyche/reference/native-tool/</link>
      <pubDate>Fri, 09 Sep 2016 22:46:46 -0400</pubDate>
      
      <guid>https://withinboredom.github.io/tyche/reference/native-tool/</guid>
      <description>&lt;p&gt;The native tool is for running commands on bare metal, however, there&amp;rsquo;s
some flexibility to run commands in varying environments. It looks like
this in a task definition:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;exec&amp;quot;: {
        &amp;quot;native&amp;quot;: {},
        &amp;quot;darwin&amp;quot;: {}, # AKA, OSX
        &amp;quot;freebsd&amp;quot;: {},
        &amp;quot;linux&amp;quot;: {},
        &amp;quot;openbsd&amp;quot;: {},
        &amp;quot;win32&amp;quot;: {},
        &amp;quot;native-nix&amp;quot;: {},
        &amp;quot;native-win&amp;quot;: {}
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If the command you need to run will work universally, it&amp;rsquo;s a good idea
to use the &amp;ldquo;native&amp;rdquo; tool, however there are a few things that may not
&amp;ldquo;just work&amp;rdquo; everywhere. For example, &lt;code&gt;rm -rf folder&lt;/code&gt; doesn&amp;rsquo;t work in
windows where it&amp;rsquo;s just &lt;code&gt;rmdir folder&lt;/code&gt;. You can define these both:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;exec&amp;quot;: {
        &amp;quot;native-nix&amp;quot;: {
            &amp;quot;command&amp;quot;: [&amp;quot;rm&amp;quot;,&amp;quot;-rf&amp;quot;,&amp;quot;folder&amp;quot;]
        },
        &amp;quot;native-win&amp;quot;: {
            &amp;quot;command&amp;quot;: [&amp;quot;rmdir&amp;quot;,&amp;quot;folder&amp;quot;]
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This allows your tasks to run cross-platform without too much hassle.&lt;/p&gt;

&lt;div class=&#34;notices info&#34; &gt;&lt;p&gt;tyche will choose the more specific native command. If &lt;code&gt;darwin&lt;/code&gt; and
&lt;code&gt;native-nix&lt;/code&gt; is defined, and tyche is being run on osx, it will choose
&lt;code&gt;darwin&lt;/code&gt; instead of &lt;code&gt;native-nix&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;


&lt;p&gt;Here are the keys/values that the native tool responds to:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;command&lt;/em&gt;: (array of strings) The command to run&lt;/li&gt;
&lt;li&gt;&lt;em&gt;working&lt;/em&gt;: (string) The working directory (current location of &lt;code&gt;tyche.json&lt;/code&gt; if not defined)&lt;/li&gt;
&lt;li&gt;&lt;em&gt;acceptsArgs&lt;/em&gt;: (boolean) Allows passing arguments from the tyche process&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>tasks</title>
      <link>https://withinboredom.github.io/tyche/reference/tasks/</link>
      <pubDate>Fri, 09 Sep 2016 22:41:33 -0400</pubDate>
      
      <guid>https://withinboredom.github.io/tyche/reference/tasks/</guid>
      <description>

&lt;p&gt;Tasks are the life-blood of tyche. To define a task, simply add it to
the &lt;code&gt;tyche.json&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;tasks&amp;quot;: [
        {
            &amp;quot;name&amp;quot;: &amp;quot;sibling task&amp;quot;
        },
        {
            &amp;quot;name&amp;quot;: &amp;quot;a task&amp;quot;, # this is the only thing a task requires
            &amp;quot;description&amp;quot;: &amp;quot;a description&amp;quot;,
            &amp;quot;exec&amp;quot;: {
                &amp;quot;native&amp;quot;: {}
            },
            &amp;quot;tasks&amp;quot;: [
                {
                    &amp;quot;name&amp;quot;: &amp;quot;another task&amp;quot;
                },
                &amp;quot;sibling task&amp;quot;
            ],
            &amp;quot;skips&amp;quot;: {
                &amp;quot;path_exists&amp;quot;: [&amp;quot;./path-to-file&amp;quot;],
                &amp;quot;files_not_changed&amp;quot;: [&amp;quot;./src/**/*.js&amp;quot;],
                &amp;quot;forced&amp;quot;: false,
                &amp;quot;skip_dependencies_if_skip&amp;quot;: false
            },
            &amp;quot;constraints&amp;quot;: {
                &amp;quot;always_use_tool&amp;quot;: &amp;quot;docker-compose&amp;quot;,
                &amp;quot;ignore_preferred_tool&amp;quot;: true
            }
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;environment-variables&#34;&gt;Environment Variables&lt;/h3&gt;

&lt;p&gt;All environment variables from the shell that invoked &lt;code&gt;tyche&lt;/code&gt; are passed
onto the command being run. The current version of the software is passed
as an environment variable as well as the variable &lt;code&gt;$BUILD_NUMBER&lt;/code&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;In a future release, this will probably be configurable.&lt;/p&gt;

&lt;h2 id=&#34;name&#34;&gt;name&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;unique&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The name must be unique to the entire &lt;code&gt;tyche.json&lt;/code&gt; file.&lt;/p&gt;

&lt;h2 id=&#34;description&#34;&gt;description&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;A freeform description&lt;/p&gt;

&lt;h2 id=&#34;exec&#34;&gt;exec&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;&lt;a  href=&#34;https://withinboredom.github.io/tyche/reference/native-tool/&#34; target=&#34;_blank&#34;  class=&#34;btn btn-default&#34;&gt;
  
  
  
    
  &lt;i class=&#34;fa fa-book&#34;&gt;&lt;/i&gt;
    
  
  Native
  
&lt;/a&gt;
&lt;a  href=&#34;https://withinboredom.github.io/tyche/reference/docker-compose-tool/&#34; target=&#34;_blank&#34;  class=&#34;btn btn-default&#34;&gt;
  
  
  
    
  &lt;i class=&#34;fa fa-book&#34;&gt;&lt;/i&gt;
    
  
  Docker Compose
  
&lt;/a&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;A description of how to run this task&lt;/p&gt;

&lt;h2 id=&#34;tasks&#34;&gt;tasks&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;&lt;a  href=&#34;https://withinboredom.github.io/tyche/reference/tasks/&#34; target=&#34;_blank&#34;  class=&#34;btn btn-default&#34;&gt;
  
  
  
    
  &lt;i class=&#34;fa fa-book&#34;&gt;&lt;/i&gt;
    
  
  Task
  
&lt;/a&gt;
 or a string, which is a reference to another task&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Dependent tasks that must be completed before this task can be completed.&lt;/p&gt;

&lt;p&gt;Keep in mind, that sibling tasks could be run in parallel in future versions.&lt;/p&gt;

&lt;div class=&#34;notices tip&#34; &gt;&lt;p&gt;toplevel tasks can be called directly from the cli, as can their immediate descendants&lt;/p&gt;
&lt;/div&gt;


&lt;h2 id=&#34;skips&#34;&gt;skips&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;object&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;file_exists&lt;/td&gt;
&lt;td&gt;a list of files/directories that it checks for existence of. If it exists it will mark this task for a skip. Globs can be used.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;files_not_changed&lt;/td&gt;
&lt;td&gt;a list of files (no directories &amp;ndash; but globs are allowed) to watch for changes. If a matching file has not changed since the last run of this task, it will mark the task for a skip&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;forced&lt;/td&gt;
&lt;td&gt;if &lt;code&gt;true&lt;/code&gt; it will always skip this task. Handy for debugging&amp;hellip;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;skip_dependencies_if_skip&lt;/td&gt;
&lt;td&gt;skip all dependencies and their children if this task gets marked for skipping.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Skips gives tyche tasks some degree of flow control in a manner that
makes sense for tasks. Please &lt;a href=&#34;https://github.com/withinboredom/tyche/issues&#34;&gt;issue in GitHub&lt;/a&gt;
if you think of any other reasons a skip should occur or you find an issue
with skipping.&lt;/p&gt;

&lt;h2 id=&#34;constraints&#34;&gt;constraints&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;false&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;always_use_tool&lt;/td&gt;
&lt;td&gt;Always, &lt;em&gt;always&lt;/em&gt;, &lt;strong&gt;always&lt;/strong&gt; use the specified tool, unless they are preferring a different tool.&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;ignore_preferred_tool&lt;/td&gt;
&lt;td&gt;When used in conjunction with &lt;code&gt;always_use_tool&lt;/code&gt;, it will ignore the user&amp;rsquo;s preferred tool and use the specified tool no matter what.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;These options constrain the tasks in some way and allow you to use &lt;code&gt;docker-compose&lt;/code&gt;
for everything except the kind of things that you can&amp;rsquo;t do in docker,
like maybe install docker? I&amp;rsquo;d be interested in seeing what you come up
with.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>studies</title>
      <link>https://withinboredom.github.io/tyche/reference/studies/</link>
      <pubDate>Fri, 09 Sep 2016 22:41:55 -0400</pubDate>
      
      <guid>https://withinboredom.github.io/tyche/reference/studies/</guid>
      <description>

&lt;p&gt;Studies are a way to constrain the user of tyche and prevent them from
making common mistakes. It requires the user to be using &lt;code&gt;git&lt;/code&gt; as their
source control provider as well as running &lt;code&gt;tyche init&lt;/code&gt; before the feature
can be utilized. It works through git-hooks.&lt;/p&gt;

&lt;p&gt;To add a study:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;study&amp;quot;: [
        {
            &amp;quot;on&amp;quot;: &amp;quot;commit&amp;quot;,
            &amp;quot;watch&amp;quot;: [
                &amp;quot;package.json&amp;quot;,
                &amp;quot;src/**/*.js&amp;quot;
            ],
            &amp;quot;message&amp;quot;: {
                &amp;quot;error&amp;quot;: &amp;quot;Please run `tyche test` before committing&amp;quot;
            },
            &amp;quot;reset&amp;quot;: [
                &amp;quot;test&amp;quot;
            ]
        }
    ]
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this example, if &lt;code&gt;package.json&lt;/code&gt; or any javascript file changes in the
src/ directory tree, then the user will be given an error message and
prevented from committing to the repo until they run &lt;code&gt;tyche test&lt;/code&gt;. Once
the &amp;ldquo;test&amp;rdquo; task is run, it will reset the error and allow them to commit
to the repo.&lt;/p&gt;

&lt;h2 id=&#34;on&#34;&gt;on&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;one of &lt;code&gt;commit&lt;/code&gt; or &lt;code&gt;push&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;What action on the repo will trigger this message?&lt;/p&gt;

&lt;h2 id=&#34;watch&#34;&gt;watch&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;an array of glob strings&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Which files/folders to watch for changes&lt;/p&gt;

&lt;h2 id=&#34;message&#34;&gt;message&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;an object containing one of &lt;code&gt;error&lt;/code&gt; or &lt;code&gt;warning&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;error&lt;/td&gt;
&lt;td&gt;prevent the user from committing or pushing&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;warning&lt;/td&gt;
&lt;td&gt;allow the user to continue committing or pushing, but display a message&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;reset&#34;&gt;reset&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;attribute&lt;/th&gt;
&lt;th&gt;value&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;required&lt;/td&gt;
&lt;td&gt;true&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td&gt;type&lt;/td&gt;
&lt;td&gt;array of task names&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Running any of these tasks will reset the warning/error and prevent it
from stopping them.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>version bump</title>
      <link>https://withinboredom.github.io/tyche/reference/version-bump/</link>
      <pubDate>Fri, 09 Sep 2016 22:42:05 -0400</pubDate>
      
      <guid>https://withinboredom.github.io/tyche/reference/version-bump/</guid>
      <description>&lt;p&gt;Bumping the version is important. It&amp;rsquo;s a way of saying, &amp;ldquo;hey, I changed
in some important way.&amp;rdquo; It could be defined as semver, or just a regular
old build number.&lt;/p&gt;

&lt;p&gt;You can also define a task, whose name is &lt;code&gt;bump&lt;/code&gt; and it will run that
task, passing the environment variable &lt;code&gt;$BUILD_NUMBER&lt;/code&gt; to the tool so
that you can use tyche to actually perform your releases.&lt;/p&gt;

&lt;p&gt;Tyche understands regular numbers and semver. By default, it uses regular
numbers, if you&amp;rsquo;d like to use semver instead: &lt;code&gt;tyche bump --set vx.y.z&lt;/code&gt;
where x is the major version, y the minor, and z the patch.&lt;/p&gt;

&lt;p&gt;Please see the output of &lt;code&gt;tyche --help bump&lt;/code&gt; for more usage information.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>